{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/apps/images/saplag/sa-plag_demo.gif","webpack:///./src/pages/apps/sa-plag.js"],"names":["SEO","description","lang","meta","title","image","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","location","className","S","src","alt","class","href","target","rel","saplagDemo"],"mappings":"+rDAYMA,EAAM,SAAC,GAA+C,IAAD,MAA5CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACrCC,GAASC,oBAAe,cAAxBD,KAgBFE,EAAkBP,GAAeK,EAAKG,aAAaR,YACnDS,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBL,MAGxC,OACE,gBAAC,IAAD,CACEO,eAAgB,CACdT,QAEFE,MAAOA,EACPQ,cAAeF,EAAY,QAAWA,EAAiB,KACvDP,KAAM,CACJ,CACEU,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASV,GAEX,CACEW,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAR,EAAKG,oBAAL,mBAAmBO,cAAnB,eAA2BC,UAA3B,IAEX,CACEJ,KAAK,gBACLC,QAASV,GAEX,CACES,KAAK,sBACLC,QAASN,GAEX,CACEO,SAAU,WACVD,QAAST,GA5CI,4FA8Cfa,OAAOf,MAKfH,EAAImB,aAAe,CACjBjB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,qIC/FA,EAAe,IAA0B,2DCuDzC,EA5CkB,SAAC,GAAkB,IAAhBmB,EAAe,EAAfA,SACnB,OACE,gBAAC,IAAD,CAAQA,SAAUA,GAChB,gBAAC,IAAD,CACEhB,MAAM,YACNH,YAAY,wDAEd,gBAAC,IAAD,CAAMG,MAAM,YAEZ,yBAAOiB,UAAU,kBACf,0BACE,sBAAIA,UAAU,sBACZ,gBAAC,EAAAC,EAAD,CAAaC,IAAI,mCAAmCC,IAAI,eAAxD,sBAEF,sBAAIH,UAAU,iBACZ,uBAAKA,UAAU,sBAAf,cAIN,uBAAKI,MAAM,iBACT,wBAAMA,MAAM,aAAZ,oBACA,qDACA,yDAEF,uBAAKJ,UAAU,kBACb,qBAAGK,KAAK,gCAAgCC,OAAO,SAASC,IAAI,uBAC1D,uBAAKL,IAAKM,EAAYL,IAAI,eAAeH,UAAU,kBAErD,kDAEF,2BACA,2BACA,2BACA,uBAAKA,UAAU,kBAAf,6BAEE,2BACA,qBAAGK,KAAK,iCAAiCC,OAAO,SAASC,IAAI,uBAC3D,gBAAC,EAAAN,EAAD,CAAaC,IAAI,iCAAiCC,IAAI,kBAAkBH,UAAU,aAAlF","file":"component---src-pages-apps-sa-plag-js-942df181f7dfa06b30b7.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title, image }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const defaultImage = 'https://raw.githubusercontent.com/xryuseix/xryuseix.github.io/master/images/toppage.png'\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        },\n        {\n          property: 'og:image',\n          content: image || defaultImage\n        }\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n","export default __webpack_public_path__ + \"static/sa-plag_demo-7528b6d7934c8c31bb1924ba2b5cec50.gif\";","import React from 'react'\n\nimport Layout from '../../components/layout'\nimport Seo from '../../components/seo'\nimport Meta from '../../components/meta'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nimport './sa-plag.css'\n\nimport saplagDemo from './images/saplag/sa-plag_demo.gif'\n\nconst SiteIndex = ({ location }) => {\n  return (\n    <Layout location={location}>\n      <Seo\n        title=\"All posts\"\n        description=\"ソースコードの盗作を判定するWeb APIです．AIが競技プログラミングのソースコードを学習しました．\"\n      />\n      <Meta title=\"SA-Plag\" />\n\n      <table className=\"sa-plag_center\">\n        <tr>\n          <th className=\"sa-plag_title_logo\">\n            <StaticImage src=\"./images/saplag/sa-plag_logo.png\" alt=\"SA-Plag logo\" />\n          </th>\n          <th className=\"sa-plag_title\">\n            <div className=\"sa-plag_title_font\">SA-Plag</div>\n          </th>\n        </tr>\n      </table>\n      <div class=\"sa-plag_whats\">\n        <span class=\"box-title\">What's SA-Plag ?</span>\n        <p>ソースコードの盗作を判定するWeb APIです．</p>\n        <p>AIが競技プログラミングのソースコードを学習しました．</p>\n      </div>\n      <div className=\"sa-plag_center\">\n        <a href=\"https://sa-plag.herokuapp.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={saplagDemo} alt=\"SA-Plag Demo\" className=\"sa-plag_demo\" />\n        </a>\n        <h3>使用するには画像をクリックしてください</h3>\n      </div>\n      <br />\n      <hr />\n      <br />\n      <div className=\"sa-plag_center\">\n        この成果物はSecHack365内で作成されました．\n        <br />\n        <a href=\"https://sechack365.nict.go.jp/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <StaticImage src=\"./images/saplag/SecHack365.png\" alt=\"SecHack365 logo\" className=\"sa-plag_sh\" />\n        </a>\n      </div>\n    </Layout>\n  )\n}\n\nexport default SiteIndex\n"],"sourceRoot":""}