{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/components/flagSubmit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/pages/ctf.js"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","props","state","flagAcceptState","isSubmit","flag","id","handleClick","bind","self","ReferenceError","inputFlag","this","setState","render","className","onClick","document","getElementById","value","React","ProblemsData","statement","href","target","rel","Problems","label","Math","random","toString","slice","htmlFor","type","location","map","data"],"mappings":"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","file":"component---src-pages-ctf-js-6819fb82251b8fa9f5a6.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n","import React from 'react'\n\nimport './flagSubmit.css'\n\nclass ToggleClass extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { flagAcceptState: true }\n    this.isSubmit = false\n    this.flag = props.flag\n    this.id = props.id\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(inputFlag) {\n    this.setState((state) => ({\n      flagAcceptState: inputFlag === this.flag\n    }))\n    this.isSubmit = true\n  }\n\n  render() {\n    return (\n      <div className=\"ctf_submitForm\">\n        <div className=\"ctf_submit-column ctf_button\">\n          <button onClick={() => this.handleClick(document.getElementById(this.id).value)}>Submit</button>\n        </div>\n        <div\n          className={\n            this.isSubmit\n              ? this.state.flagAcceptState\n                ? 'ctf_submit-column ctf_output ctf_submit-success'\n                : 'ctf_submit-column ctf_output ctf_submit-failure'\n              : 'ctf_submit-column ctf_output'\n          }\n        >\n          {this.isSubmit ? (this.state.flagAcceptState ? 'SUCCESS' : 'FAILURE') : ''}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ToggleClass\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Meta from '../components/meta'\nimport FlagSubmit from '../components/flagSubmit'\nimport './ctf.css'\n\nconst ProblemsData = [\n  {\n    title: '[Welcome](100) Welcome Problem',\n    statement: (\n      <>\n        This Problems Answer is <code>xryuseixCTF&#123;flag&#125;</code>\n      </>\n    ),\n    flag: 'xryuseixCTF{flag}'\n  },\n  {\n    title: '[Web](100) Wandering',\n    statement: 'このサイトの内容が多すぎて困ってます．検索ページを付けようか迷ってます...',\n    flag: 'xryuseixCTF{XSS_51y0ut051t3t3_ku54}'\n  },\n  {\n    title: '[misc](200) Time measurement',\n    statement: (\n      <>\n        実行時間を計測するサイトがあります．試してみてください！\n        <br />\n        <a href=\"https://redos-server.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          https://redos-server.herokuapp.com/\n        </a>\n      </>\n    ),\n    flag: 'xryuseixCTF{flag}'\n  }\n]\n\n/* \n 問題を全て出力\n title ... 問題タイトル\n statement ... 問題文\n flag ... 答え\n*/\nconst Problems = ({ title, statement, flag }) => {\n  const label = Math.random().toString(36).slice(-12)\n  const id = Math.random().toString(36).slice(-12)\n  return (\n    <div className=\"ctf_hidden-box\">\n      <label htmlFor={label}>{title}</label>\n      <input type=\"checkbox\" id={label} />\n      <div className=\"ctf_hidden-show\">\n        <p>{statement}</p>\n        <div className=\"ctf_submit-column input\">\n          <input type=\"text\" id={id} />\n        </div>\n        <FlagSubmit flag={flag} id={id} />\n      </div>\n    </div>\n  )\n}\n\nconst SiteIndex = ({ location }) => {\n  return (\n    <Layout location={location}>\n      <SEO title=\"CTF\" description=\"CTF問題をここにおきます．基本的に簡単です．\" />\n      <Meta title=\"CTF\" />\n      <h1>CTF</h1>\n      <p>CTF問題をここにおきます．基本的に簡単です．</p>\n      <h3>このページのソースはみないでね，フラグがそのまま載ってます．</h3>\n      {ProblemsData.map((data) => (\n        <Problems {...data} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default SiteIndex\n"],"sourceRoot":""}