{"version":3,"sources":["webpack:///./src/components/flagSubmit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/pages/ctf.js","webpack:///./src/components/meta.js","webpack:///./src/components/seo.js"],"names":["ToggleClass","props","state","flagAcceptState","flag","handleClick","bind","self","ReferenceError","inputFlag","this","setState","render","type","id","onClick","document","getElementById","value","React","Component","SiteIndex","location","title","description","class","htmlFor","lang","name","content","charset","SEO","meta","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","property","social","twitter","concat","defaultProps"],"mappings":"kLA8BeA,E,YA3Bb,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,iBAAiB,GAChC,EAAKC,KAAO,oBACZ,EAAKC,YAAc,EAAKA,YAAYC,KCPzB,SAAgCC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EDEc,KAJF,E,4CAOnBF,YAAA,SAAYI,GAAY,IAAD,OACrBC,KAAKC,UAAS,SAACT,GAAD,MAAY,CACxBC,gBAAiBM,IAAc,EAAKL,U,EAIxCQ,OAAA,WAAU,IAAD,OACP,OACE,6BACE,8BACE,2BAAOC,KAAK,OAAOC,GAAG,cAEvBJ,KAAKR,MAAMC,gBAAkB,UAAY,UAC1C,6BACA,4BAAQY,QAAS,kBAAM,EAAKV,YAAYW,SAASC,eAAe,YAAYC,SAA5E,Y,GAtBkBC,IAAMC,W,UE0BjBC,UApBG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACE,kBAAC,IAAD,CAAQA,SAAUA,GAChB,kBAAC,IAAD,CAAKC,MAAM,MAAMC,YAAY,4BAC7B,kBAAC,IAAD,CAAMD,MAAM,QACZ,mCACA,sDACA,8DACA,yBAAKE,MAAM,cACT,2BAAOC,QAAQ,UAAf,wBACA,2BAAOb,KAAK,WAAWC,GAAG,WAC1B,yBAAKW,MAAM,eACT,wCACA,kBAAC,EAAD,W,kCCrBV,qCAGe,aAACxB,GACd,IAAMsB,EAAK,GAAMtB,EAAMsB,MAGvB,OACE,kBAAC,IAAD,KACE,0BAAMI,KAAK,OACX,+BAAQJ,GACR,0BAAMK,KAAK,cAAcC,QAL3B,gQAME,0BAAMC,QAAQ,a,yDCZpB,iDAYMC,EAAM,SAAC,GAAwC,IAAD,MAArCP,EAAqC,EAArCA,YAAaG,EAAwB,EAAxBA,KAAMK,EAAkB,EAAlBA,KAAMT,EAAY,EAAZA,MAC9BU,EAASC,yBAAe,cAAxBD,KAgBFE,EAAkBX,GAAeS,EAAKG,aAAaZ,YACnDa,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBb,MAExC,OACE,kBAAC,IAAD,CACEe,eAAgB,CACdX,QAEFJ,MAAOA,EACPgB,cAAeF,EAAY,QAAWA,EAAiB,KACvDL,KAAM,CACJ,CACEJ,KAAK,cACLC,QAASM,GAEX,CACEK,SAAS,WACTX,QAASN,GAEX,CACEiB,SAAS,iBACTX,QAASM,GAEX,CACEK,SAAS,UACTX,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAI,EAAKG,oBAAL,mBAAmBK,cAAnB,eAA2BC,UAA3B,IAEX,CACEd,KAAK,gBACLC,QAASN,GAEX,CACEK,KAAK,sBACLC,QAASM,IAEXQ,OAAOX,MAKfD,EAAIa,aAAe,CACjBjB,KAAK,KACLK,KAAM,GACNR,YAAY,IAUCO","file":"component---src-pages-ctf-js-e3e7b70a16e81367ba76.js","sourcesContent":["import React from 'react'\n\nclass ToggleClass extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { flagAcceptState: true }\n    this.flag = 'xryuseixCTF{flag}'\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(inputFlag) {\n    this.setState((state) => ({\n      flagAcceptState: inputFlag === this.flag\n    }))\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <input type=\"text\" id=\"textForm\" />\n        </form>\n        {this.state.flagAcceptState ? 'SUCCESS' : 'FAILURE'}\n        <br />\n        <button onClick={() => this.handleClick(document.getElementById('textForm').value)}>Submit</button>\n      </div>\n    )\n  }\n}\n\nexport default ToggleClass\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Meta from '../components/meta'\nimport FlagSubmit from '../components/flagSubmit'\nimport './ctf.css'\n\nconst SiteIndex = ({ location }) => {\n  return (\n    <Layout location={location}>\n      <SEO title=\"CTF\" description=\"CTF問題をここにおきます．基本的に簡単です．\" />\n      <Meta title=\"CTF\" />\n      <h1>CTF</h1>\n      <p>CTF問題をここにおきます．基本的に簡単です．</p>\n      <h3>このページのソースはみないでね，フラグがそのまま載ってます．</h3>\n      <div class=\"hidden_box\">\n        <label htmlFor=\"label1\">[Welcome](100) 問題テスト</label>\n        <input type=\"checkbox\" id=\"label1\" />\n        <div class=\"hidden_show\">\n          <p>フラグ形式のテスト</p>\n          <FlagSubmit />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default SiteIndex\n/* <p>このサイトの内容が多すぎて困ってます．検索ページを付けようか迷ってます...</p> */\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nexport default (props) => {\n  const title = `${props.title}`\n  const description =\n    'xryuseixのWebページです．ここからはTwitterのbioから引用 -> Rits Security Network(入学: &#39;19) / SecHack365&#39;20(研究駆動) / seccamp&#39;19 / RiPPro(&#39;20団体長) / RiST(&#39;20副団体長) / AtCoder(cyan) / CodeForces(blue) / paiza, Inc. 学習事業部アルバイト / 競技プログラミングやセキュリティの分野を勉強しています．'\n  return (\n    <Helmet>\n      <html lang=\"ja\" />\n      <title>{title}</title>\n      <meta name=\"Description\" content={description} />\n      <meta charset=\"UTF-8\" />\n    </Helmet>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n"],"sourceRoot":""}