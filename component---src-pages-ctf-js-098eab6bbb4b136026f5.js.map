{"version":3,"sources":["webpack:///./src/components/meta.js","webpack:///./src/components/seo.js","webpack:///./src/components/flagSubmit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/pages/ctf.js"],"names":["props","title","lang","name","content","charset","SEO","description","meta","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","property","social","twitter","concat","defaultProps","state","flagAcceptState","isSubmit","flag","id","handleClick","bind","self","ReferenceError","inputFlag","this","setState","render","class","onClick","document","getElementById","value","React","location","htmlFor","type"],"mappings":"iHAGA,aAAgBA,GACd,IAAMC,EAAK,GAAMD,EAAMC,MAGvB,OACE,gBAAC,IAAD,KACE,wBAAMC,KAAK,OACX,6BAAQD,GACR,wBAAME,KAAK,cAAcC,QAL3B,gQAME,wBAAMC,QAAQ,a,oECAdC,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaL,EAAwB,EAAxBA,KAAMM,EAAkB,EAAlBA,KAAMP,EAAY,EAAZA,MAC9BQ,GAASC,oBAAe,cAAxBD,KAgBFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBX,MAExC,OACE,gBAAC,IAAD,CACEa,eAAgB,CACdZ,QAEFD,MAAOA,EACPc,cAAeF,EAAY,QAAWA,EAAiB,KACvDL,KAAM,CACJ,CACEL,KAAK,cACLC,QAASO,GAEX,CACEK,SAAS,WACTZ,QAASH,GAEX,CACEe,SAAS,iBACTZ,QAASO,GAEX,CACEK,SAAS,UACTZ,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAK,EAAKG,oBAAL,mBAAmBK,cAAnB,eAA2BC,UAA3B,IAEX,CACEf,KAAK,gBACLC,QAASH,GAEX,CACEE,KAAK,sBACLC,QAASO,IAEXQ,OAAOX,MAKfF,EAAIc,aAAe,CACjBlB,KAAK,KACLM,KAAM,GACND,YAAY,IAUd,O,yIC/CA,E,YAtCE,WAAYP,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKqB,MAAQ,CAAEC,iBAAiB,GAChC,EAAKC,UAAW,EAChB,EAAKC,KAAOxB,EAAMwB,KAClB,EAAKC,GAAKzB,EAAMyB,GAChB,EAAKC,YAAc,EAAKA,YAAYC,KCXzB,SAAgCC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EDMc,KANF,G,uCASnBF,YAAA,SAAYI,GAAY,IAAD,OACrBC,KAAKC,UAAS,SAACX,GAAD,MAAY,CACxBC,gBAAiBQ,IAAc,EAAKN,SAEtCO,KAAKR,UAAW,G,EAGlBU,OAAA,WAAU,IAAD,OACP,OACE,uBAAKC,MAAM,cACT,uBAAKA,MAAM,wBACT,0BAAQC,QAAS,kBAAM,EAAKT,YAAYU,SAASC,eAAe,EAAKZ,IAAIa,SAAzE,WAEF,uBACEJ,MACEH,KAAKR,SACDQ,KAAKV,MAAMC,gBACT,sCACA,sCACF,wBAGLS,KAAKR,SAAYQ,KAAKV,MAAMC,gBAAkB,UAAY,UAAa,M,GAhCxDiB,aEwC1B,EApCkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACE,gBAAC,IAAD,CAAQA,SAAUA,GAChB,gBAAC,IAAD,CAAKvC,MAAM,MAAMM,YAAY,4BAC7B,gBAAC,IAAD,CAAMN,MAAM,QACZ,iCACA,oDACA,4DACA,uBAAKiC,MAAM,cACT,yBAAOO,QAAQ,UAAf,kCACA,yBAAOC,KAAK,WAAWjB,GAAG,WAC1B,uBAAKS,MAAM,eACT,oDAC0B,kDAE1B,uBAAKA,MAAM,uBACT,yBAAOQ,KAAK,OAAOjB,GAAG,eAExB,gBAAC,EAAD,CAAYD,KAAK,oBAAoBC,GAAG,gBAG5C,uBAAKS,MAAM,cACT,yBAAOO,QAAQ,UAAf,wBACA,yBAAOC,KAAK,WAAWjB,GAAG,WAC1B,uBAAKS,MAAM,eACT,mEACA,uBAAKA,MAAM,uBACT,yBAAOQ,KAAK,OAAOjB,GAAG,eAExB,gBAAC,EAAD,CAAYD,KAAK,sCAAsCC,GAAG","file":"component---src-pages-ctf-js-098eab6bbb4b136026f5.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nexport default (props) => {\n  const title = `${props.title}`\n  const description =\n    'xryuseixのWebページです．ここからはTwitterのbioから引用 -> Rits Security Network(入学: &#39;19) / SecHack365&#39;20(研究駆動) / seccamp&#39;19 / RiPPro(&#39;20団体長) / RiST(&#39;20副団体長) / AtCoder(cyan) / CodeForces(blue) / paiza, Inc. 学習事業部アルバイト / 競技プログラミングやセキュリティの分野を勉強しています．'\n  return (\n    <Helmet>\n      <html lang=\"ja\" />\n      <title>{title}</title>\n      <meta name=\"Description\" content={description} />\n      <meta charset=\"UTF-8\" />\n    </Helmet>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n","import React from 'react'\n\nimport './flagSubmit.css'\n\nclass ToggleClass extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { flagAcceptState: true }\n    this.isSubmit = false\n    this.flag = props.flag\n    this.id = props.id\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(inputFlag) {\n    this.setState((state) => ({\n      flagAcceptState: inputFlag === this.flag\n    }))\n    this.isSubmit = true\n  }\n\n  render() {\n    return (\n      <div class=\"submitForm\">\n        <div class=\"submit-column button\">\n          <button onClick={() => this.handleClick(document.getElementById(this.id).value)}>Submit</button>\n        </div>\n        <div\n          class={\n            this.isSubmit\n              ? this.state.flagAcceptState\n                ? 'submit-column output submit-success'\n                : 'submit-column output submit-failure'\n              : 'submit-column output'\n          }\n        >\n          {this.isSubmit ? (this.state.flagAcceptState ? 'SUCCESS' : 'FAILURE') : ''}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ToggleClass\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Meta from '../components/meta'\nimport FlagSubmit from '../components/flagSubmit'\nimport './ctf.css'\n\nconst SiteIndex = ({ location }) => {\n  return (\n    <Layout location={location}>\n      <SEO title=\"CTF\" description=\"CTF問題をここにおきます．基本的に簡単です．\" />\n      <Meta title=\"CTF\" />\n      <h1>CTF</h1>\n      <p>CTF問題をここにおきます．基本的に簡単です．</p>\n      <h3>このページのソースはみないでね，フラグがそのまま載ってます．</h3>\n      <div class=\"hidden_box\">\n        <label htmlFor=\"label1\">[Welcome](100) Welcome Problem</label>\n        <input type=\"checkbox\" id=\"label1\" />\n        <div class=\"hidden_show\">\n          <p>\n            This Problems Answer is <code>xryuseixCTF&#123;flag&#125;</code>\n          </p>\n          <div class=\"submit-column input\">\n            <input type=\"text\" id=\"textForm1\" />\n          </div>\n          <FlagSubmit flag=\"xryuseixCTF{flag}\" id=\"textForm1\" />\n        </div>\n      </div>\n      <div class=\"hidden_box\">\n        <label htmlFor=\"label2\">[Web](100) Wandering</label>\n        <input type=\"checkbox\" id=\"label2\" />\n        <div class=\"hidden_show\">\n          <p>このサイトの内容が多すぎて困ってます．検索ページを付けようか迷ってます...</p>\n          <div class=\"submit-column input\">\n            <input type=\"text\" id=\"textForm2\" />\n          </div>\n          <FlagSubmit flag=\"xryuseixCTF{XSS_51y0ut051t3t3_ku54}\" id=\"textForm2\" />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default SiteIndex\n"],"sourceRoot":""}