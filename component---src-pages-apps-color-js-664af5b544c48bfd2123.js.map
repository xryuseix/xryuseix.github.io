{"version":3,"sources":["webpack:///./src/pages/apps/color.js"],"names":["Colors","name","code","ColorsSwitching","props","default","state","full","display","exitFullscreen","this","document","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","cancelFullScreen","setState","querySelector","style","backgroundColor","handleKeyDown","componentDidMount","window","addEventListener","bind","changeBackGrountColor","colorCode","elem","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","render","className","map","colorData","onClick","React","location","title","description"],"mappings":"sJAQMA,EAAS,CACb,CAAEC,KAAM,IAAKC,KAAM,SACnB,CAAED,KAAM,IAAKC,KAAM,SACnB,CAAED,KAAM,IAAKC,KAAM,OACnB,CAAED,KAAM,IAAKC,KAAM,WAMfC,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,QAAUD,EAAMC,QACrB,EAAKC,MAAQ,CACXC,MAAM,EACNC,QAAS,SALM,G,uCAYnBC,eAAA,WACMC,KAAKJ,MAAMC,OAETI,SAASC,uBACXD,SAASC,yBACAD,SAASE,oBAClBF,SAASE,sBACAF,SAASG,iBAClBH,SAASG,mBACAH,SAASI,iBAClBJ,SAASI,mBACAJ,SAASF,gBAClBE,SAASF,iBAEXC,KAAKM,SAAS,CAAET,MAAM,EAAOC,QAAS,UACO,MAAzCG,SAASM,cAAc,iBACzBN,SAASM,cAAc,eAAeC,MAAMC,gBAAkB,W,EAOpEC,cAAA,WACEV,KAAKD,kB,EAEPY,kBAAA,WACEC,OAAOC,iBAAiB,UAAWb,KAAKU,cAAcI,KAAKd,Q,EAM7De,sBAAA,SAAsBC,GACyB,MAAzCf,SAASM,cAAc,iBACzBN,SAASM,cAAc,eAAeC,MAAMC,gBAAkBO,GAGhE,IAAMC,EAAOhB,SAASM,cAAc,eAChCU,EAAKC,wBACPD,EAAKC,0BACID,EAAKE,qBACdF,EAAKE,uBACIF,EAAKG,oBACdH,EAAKG,sBACIH,EAAKI,mBACdJ,EAAKI,oBAEPrB,KAAKM,SAAS,CAAET,MAAM,EAAMC,QAAS,U,EAGvCwB,OAAA,WAAU,IAAD,OACP,OACE,uBAAKC,UAAU,cACb,uBAAKf,MAAO,CAAEV,QAASE,KAAKJ,MAAME,UAC/BR,EAAOkC,KAAI,SAACC,GAAD,OACV,0BACEjB,MAAO,CAAEC,gBAAiBgB,EAAUjC,MACpCkC,QAAS,kBAAM,EAAKX,sBAAsBU,EAAUjC,QAEnDiC,EAAUlC,Y,GAzEKoC,aA2F9B,UATuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OACE,gBAAC,IAAD,CAAQA,SAAUA,GAChB,gBAAC,IAAD,CAAKC,MAAM,SAASC,YAAY,WAChC,gBAAC,IAAD,CAAMD,MAAM,WACZ,gBAACpC,EAAD","file":"component---src-pages-apps-color-js-664af5b544c48bfd2123.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../components/layout'\nimport Meta from '../../components/meta'\nimport Seo from '../../components/seo'\n\nimport './color.css'\n\nconst Colors = [\n  { name: '黒', code: 'black' },\n  { name: '白', code: 'white' },\n  { name: '赤', code: 'red' },\n  { name: '黄', code: 'yellow' }\n]\n\n/*\n * 背景色の切り替えを行う\n */\nclass ColorsSwitching extends React.Component {\n  constructor(props) {\n    super(props)\n    this.default = props.default\n    this.state = {\n      full: false,\n      display: 'block'\n    }\n  }\n\n  /*\n   * キーが押された時の処理\n   */\n  exitFullscreen() {\n    if (this.state.full) {\n      // フルスクリーン元に戻す\n      if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen() // Chrome15+, Safari5.1+, Opera15+\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen() // FF10+\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen() // IE11+\n      } else if (document.cancelFullScreen) {\n        document.cancelFullScreen() // Gecko:FullScreenAPI仕様\n      } else if (document.exitFullscreen) {\n        document.exitFullscreen() // HTML5 Fullscreen API仕様\n      }\n      this.setState({ full: false, display: 'block' })\n      if (document.querySelector('.color_body') != null) {\n        document.querySelector('.color_body').style.backgroundColor = 'white'\n      }\n    }\n  }\n  /*\n   * キーが押された時のイベントハンドラ\n   */\n  handleKeyDown() {\n    this.exitFullscreen()\n  }\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown.bind(this))\n  }\n\n  /*\n   * 背景色を変更\n   */\n  changeBackGrountColor(colorCode) {\n    if (document.querySelector('.color_body') != null) {\n      document.querySelector('.color_body').style.backgroundColor = colorCode\n    }\n    // フルスクリーンにする\n    const elem = document.querySelector('.color_body')\n    if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen() // Chrome15+, Safari5.1+, Opera15+\n    } else if (elem.mozRequestFullScreen) {\n      elem.mozRequestFullScreen() // FF10+\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen() // IE11+\n    } else if (elem.requestFullscreen) {\n      elem.requestFullscreen() // HTML5 Fullscreen API仕様\n    }\n    this.setState({ full: true, display: 'none' })\n  }\n\n  render() {\n    return (\n      <div className=\"color_body\">\n        <div style={{ display: this.state.display }}>\n          {Colors.map((colorData) => (\n            <button\n              style={{ backgroundColor: colorData.code }}\n              onClick={() => this.changeBackGrountColor(colorData.code)}\n            >\n              {colorData.name}\n            </button>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst ColorSiteIndex = ({ location }) => {\n  return (\n    <Layout location={location}>\n      <Seo title=\"Colors\" description=\"Colors\" />\n      <Meta title=\"Colors\" />\n      <ColorsSwitching />\n    </Layout>\n  )\n}\nexport default ColorSiteIndex\n"],"sourceRoot":""}