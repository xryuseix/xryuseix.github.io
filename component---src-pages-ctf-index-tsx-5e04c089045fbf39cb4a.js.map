{"version":3,"file":"component---src-pages-ctf-index-tsx-5e04c089045fbf39cb4a.js","mappings":"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","sources":["webpack:///./node_modules/fast-sha256/sha256.js","webpack:///./src/components/flagSubmit.tsx","webpack:///./src/pages/ctf/content/problem.pdf","webpack:///./src/components/data/ctfData.tsx","webpack:///./src/pages/ctf/index.tsx"],"sourcesContent":["(function (root, factory) {\n  // Hack to make all exports of this module sha256 function object properties.\n  var exports = {};\n  factory(exports);\n  var sha256 = exports[\"default\"];\n\n  for (var k in exports) {\n    sha256[k] = exports[k];\n  }\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = sha256;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return sha256;\n    });\n  } else {\n    root.sha256 = sha256;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  exports.__esModule = true; // SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n  //\n  // Written in 2014-2016 by Dmitry Chestnykh.\n  // Public domain, no warranty.\n  //\n  // Functions (accept and return Uint8Arrays):\n  //\n  //   sha256(message) -> hash\n  //   sha256.hmac(key, message) -> mac\n  //   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n  //\n  //  Classes:\n  //\n  //   new sha256.Hash()\n  //   new sha256.HMAC(key)\n  //\n\n  exports.digestLength = 32;\n  exports.blockSize = 64; // SHA-256 constants\n\n  var K = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);\n\n  function hashBlocks(w, v, p, pos, len) {\n    var a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n\n    while (len >= 64) {\n      a = v[0];\n      b = v[1];\n      c = v[2];\n      d = v[3];\n      e = v[4];\n      f = v[5];\n      g = v[6];\n      h = v[7];\n\n      for (i = 0; i < 16; i++) {\n        j = pos + i * 4;\n        w[i] = (p[j] & 0xff) << 24 | (p[j + 1] & 0xff) << 16 | (p[j + 2] & 0xff) << 8 | p[j + 3] & 0xff;\n      }\n\n      for (i = 16; i < 64; i++) {\n        u = w[i - 2];\n        t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;\n        u = w[i - 15];\n        t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;\n        w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n      }\n\n      for (i = 0; i < 64; i++) {\n        t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;\n        t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n\n      v[0] += a;\n      v[1] += b;\n      v[2] += c;\n      v[3] += d;\n      v[4] += e;\n      v[5] += f;\n      v[6] += g;\n      v[7] += h;\n      pos += 64;\n      len -= 64;\n    }\n\n    return pos;\n  } // Hash implements SHA256 hash algorithm.\n\n\n  var Hash =\n  /** @class */\n  function () {\n    function Hash() {\n      this.digestLength = exports.digestLength;\n      this.blockSize = exports.blockSize; // Note: Int32Array is used instead of Uint32Array for performance reasons.\n\n      this.state = new Int32Array(8); // hash state\n\n      this.temp = new Int32Array(64); // temporary state\n\n      this.buffer = new Uint8Array(128); // buffer for data to hash\n\n      this.bufferLength = 0; // number of bytes in buffer\n\n      this.bytesHashed = 0; // number of total bytes hashed\n\n      this.finished = false; // indicates whether the hash was finalized\n\n      this.reset();\n    } // Resets hash state making it possible\n    // to re-use this instance to hash other data.\n\n\n    Hash.prototype.reset = function () {\n      this.state[0] = 0x6a09e667;\n      this.state[1] = 0xbb67ae85;\n      this.state[2] = 0x3c6ef372;\n      this.state[3] = 0xa54ff53a;\n      this.state[4] = 0x510e527f;\n      this.state[5] = 0x9b05688c;\n      this.state[6] = 0x1f83d9ab;\n      this.state[7] = 0x5be0cd19;\n      this.bufferLength = 0;\n      this.bytesHashed = 0;\n      this.finished = false;\n      return this;\n    }; // Cleans internal buffers and re-initializes hash state.\n\n\n    Hash.prototype.clean = function () {\n      for (var i = 0; i < this.buffer.length; i++) {\n        this.buffer[i] = 0;\n      }\n\n      for (var i = 0; i < this.temp.length; i++) {\n        this.temp[i] = 0;\n      }\n\n      this.reset();\n    }; // Updates hash state with the given data.\n    //\n    // Optionally, length of the data can be specified to hash\n    // fewer bytes than data.length.\n    //\n    // Throws error when trying to update already finalized hash:\n    // instance must be reset to use it again.\n\n\n    Hash.prototype.update = function (data, dataLength) {\n      if (dataLength === void 0) {\n        dataLength = data.length;\n      }\n\n      if (this.finished) {\n        throw new Error(\"SHA256: can't update because hash was finished.\");\n      }\n\n      var dataPos = 0;\n      this.bytesHashed += dataLength;\n\n      if (this.bufferLength > 0) {\n        while (this.bufferLength < 64 && dataLength > 0) {\n          this.buffer[this.bufferLength++] = data[dataPos++];\n          dataLength--;\n        }\n\n        if (this.bufferLength === 64) {\n          hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n          this.bufferLength = 0;\n        }\n      }\n\n      if (dataLength >= 64) {\n        dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n        dataLength %= 64;\n      }\n\n      while (dataLength > 0) {\n        this.buffer[this.bufferLength++] = data[dataPos++];\n        dataLength--;\n      }\n\n      return this;\n    }; // Finalizes hash state and puts hash into out.\n    //\n    // If hash was already finalized, puts the same value.\n\n\n    Hash.prototype.finish = function (out) {\n      if (!this.finished) {\n        var bytesHashed = this.bytesHashed;\n        var left = this.bufferLength;\n        var bitLenHi = bytesHashed / 0x20000000 | 0;\n        var bitLenLo = bytesHashed << 3;\n        var padLength = bytesHashed % 64 < 56 ? 64 : 128;\n        this.buffer[left] = 0x80;\n\n        for (var i = left + 1; i < padLength - 8; i++) {\n          this.buffer[i] = 0;\n        }\n\n        this.buffer[padLength - 8] = bitLenHi >>> 24 & 0xff;\n        this.buffer[padLength - 7] = bitLenHi >>> 16 & 0xff;\n        this.buffer[padLength - 6] = bitLenHi >>> 8 & 0xff;\n        this.buffer[padLength - 5] = bitLenHi >>> 0 & 0xff;\n        this.buffer[padLength - 4] = bitLenLo >>> 24 & 0xff;\n        this.buffer[padLength - 3] = bitLenLo >>> 16 & 0xff;\n        this.buffer[padLength - 2] = bitLenLo >>> 8 & 0xff;\n        this.buffer[padLength - 1] = bitLenLo >>> 0 & 0xff;\n        hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n        this.finished = true;\n      }\n\n      for (var i = 0; i < 8; i++) {\n        out[i * 4 + 0] = this.state[i] >>> 24 & 0xff;\n        out[i * 4 + 1] = this.state[i] >>> 16 & 0xff;\n        out[i * 4 + 2] = this.state[i] >>> 8 & 0xff;\n        out[i * 4 + 3] = this.state[i] >>> 0 & 0xff;\n      }\n\n      return this;\n    }; // Returns the final hash digest.\n\n\n    Hash.prototype.digest = function () {\n      var out = new Uint8Array(this.digestLength);\n      this.finish(out);\n      return out;\n    }; // Internal function for use in HMAC for optimization.\n\n\n    Hash.prototype._saveState = function (out) {\n      for (var i = 0; i < this.state.length; i++) {\n        out[i] = this.state[i];\n      }\n    }; // Internal function for use in HMAC for optimization.\n\n\n    Hash.prototype._restoreState = function (from, bytesHashed) {\n      for (var i = 0; i < this.state.length; i++) {\n        this.state[i] = from[i];\n      }\n\n      this.bytesHashed = bytesHashed;\n      this.finished = false;\n      this.bufferLength = 0;\n    };\n\n    return Hash;\n  }();\n\n  exports.Hash = Hash; // HMAC implements HMAC-SHA256 message authentication algorithm.\n\n  var HMAC =\n  /** @class */\n  function () {\n    function HMAC(key) {\n      this.inner = new Hash();\n      this.outer = new Hash();\n      this.blockSize = this.inner.blockSize;\n      this.digestLength = this.inner.digestLength;\n      var pad = new Uint8Array(this.blockSize);\n\n      if (key.length > this.blockSize) {\n        new Hash().update(key).finish(pad).clean();\n      } else {\n        for (var i = 0; i < key.length; i++) {\n          pad[i] = key[i];\n        }\n      }\n\n      for (var i = 0; i < pad.length; i++) {\n        pad[i] ^= 0x36;\n      }\n\n      this.inner.update(pad);\n\n      for (var i = 0; i < pad.length; i++) {\n        pad[i] ^= 0x36 ^ 0x5c;\n      }\n\n      this.outer.update(pad);\n      this.istate = new Uint32Array(8);\n      this.ostate = new Uint32Array(8);\n\n      this.inner._saveState(this.istate);\n\n      this.outer._saveState(this.ostate);\n\n      for (var i = 0; i < pad.length; i++) {\n        pad[i] = 0;\n      }\n    } // Returns HMAC state to the state initialized with key\n    // to make it possible to run HMAC over the other data with the same\n    // key without creating a new instance.\n\n\n    HMAC.prototype.reset = function () {\n      this.inner._restoreState(this.istate, this.inner.blockSize);\n\n      this.outer._restoreState(this.ostate, this.outer.blockSize);\n\n      return this;\n    }; // Cleans HMAC state.\n\n\n    HMAC.prototype.clean = function () {\n      for (var i = 0; i < this.istate.length; i++) {\n        this.ostate[i] = this.istate[i] = 0;\n      }\n\n      this.inner.clean();\n      this.outer.clean();\n    }; // Updates state with provided data.\n\n\n    HMAC.prototype.update = function (data) {\n      this.inner.update(data);\n      return this;\n    }; // Finalizes HMAC and puts the result in out.\n\n\n    HMAC.prototype.finish = function (out) {\n      if (this.outer.finished) {\n        this.outer.finish(out);\n      } else {\n        this.inner.finish(out);\n        this.outer.update(out, this.digestLength).finish(out);\n      }\n\n      return this;\n    }; // Returns message authentication code.\n\n\n    HMAC.prototype.digest = function () {\n      var out = new Uint8Array(this.digestLength);\n      this.finish(out);\n      return out;\n    };\n\n    return HMAC;\n  }();\n\n  exports.HMAC = HMAC; // Returns SHA256 hash of data.\n\n  function hash(data) {\n    var h = new Hash().update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n  }\n\n  exports.hash = hash; // Function hash is both available as module.hash and as default export.\n\n  exports[\"default\"] = hash; // Returns HMAC-SHA256 of data under the key.\n\n  function hmac(key, data) {\n    var h = new HMAC(key).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n  }\n\n  exports.hmac = hmac; // Fills hkdf buffer like this:\n  // T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\n\n  function fillBuffer(buffer, hmac, info, counter) {\n    // Counter is a byte value: check if it overflowed.\n    var num = counter[0];\n\n    if (num === 0) {\n      throw new Error(\"hkdf: cannot expand more\");\n    } // Prepare HMAC instance for new data with old key.\n\n\n    hmac.reset(); // Hash in previous output if it was generated\n    // (i.e. counter is greater than 1).\n\n    if (num > 1) {\n      hmac.update(buffer);\n    } // Hash in info if it exists.\n\n\n    if (info) {\n      hmac.update(info);\n    } // Hash in the counter.\n\n\n    hmac.update(counter); // Output result to buffer and clean HMAC instance.\n\n    hmac.finish(buffer); // Increment counter inside typed array, this works properly.\n\n    counter[0]++;\n  }\n\n  var hkdfSalt = new Uint8Array(exports.digestLength); // Filled with zeroes.\n\n  function hkdf(key, salt, info, length) {\n    if (salt === void 0) {\n      salt = hkdfSalt;\n    }\n\n    if (length === void 0) {\n      length = 32;\n    }\n\n    var counter = new Uint8Array([1]); // HKDF-Extract uses salt as HMAC key, and key as data.\n\n    var okm = hmac(salt, key); // Initialize HMAC for expanding with extracted key.\n    // Ensure no collisions with `hmac` function.\n\n    var hmac_ = new HMAC(okm); // Allocate buffer.\n\n    var buffer = new Uint8Array(hmac_.digestLength);\n    var bufpos = buffer.length;\n    var out = new Uint8Array(length);\n\n    for (var i = 0; i < length; i++) {\n      if (bufpos === buffer.length) {\n        fillBuffer(buffer, hmac_, info, counter);\n        bufpos = 0;\n      }\n\n      out[i] = buffer[bufpos++];\n    }\n\n    hmac_.clean();\n    buffer.fill(0);\n    counter.fill(0);\n    return out;\n  }\n\n  exports.hkdf = hkdf; // Derives a key from password and salt using PBKDF2-HMAC-SHA256\n  // with the given number of iterations.\n  //\n  // The number of bytes returned is equal to dkLen.\n  //\n  // (For better security, avoid dkLen greater than hash length - 32 bytes).\n\n  function pbkdf2(password, salt, iterations, dkLen) {\n    var prf = new HMAC(password);\n    var len = prf.digestLength;\n    var ctr = new Uint8Array(4);\n    var t = new Uint8Array(len);\n    var u = new Uint8Array(len);\n    var dk = new Uint8Array(dkLen);\n\n    for (var i = 0; i * len < dkLen; i++) {\n      var c = i + 1;\n      ctr[0] = c >>> 24 & 0xff;\n      ctr[1] = c >>> 16 & 0xff;\n      ctr[2] = c >>> 8 & 0xff;\n      ctr[3] = c >>> 0 & 0xff;\n      prf.reset();\n      prf.update(salt);\n      prf.update(ctr);\n      prf.finish(u);\n\n      for (var j = 0; j < len; j++) {\n        t[j] = u[j];\n      }\n\n      for (var j = 2; j <= iterations; j++) {\n        prf.reset();\n        prf.update(u).finish(u);\n\n        for (var k = 0; k < len; k++) {\n          t[k] ^= u[k];\n        }\n      }\n\n      for (var j = 0; j < len && i * len + j < dkLen; j++) {\n        dk[i * len + j] = t[j];\n      }\n    }\n\n    for (var i = 0; i < len; i++) {\n      t[i] = u[i] = 0;\n    }\n\n    for (var i = 0; i < 4; i++) {\n      ctr[i] = 0;\n    }\n\n    prf.clean();\n    return dk;\n  }\n\n  exports.pbkdf2 = pbkdf2;\n});","import React from 'react'\nimport sha256 from 'fast-sha256'\n\nimport './flagSubmit.css'\n\ninterface FlagProps {\n  flag: Uint8Array\n  id: string\n}\n\nclass ToggleClass extends React.Component<FlagProps, {}> {\n  flag: FlagProps['flag']\n  id: FlagProps['id']\n  state: { flagAcceptState: boolean; isSubmit: boolean }\n  constructor(props: FlagProps) {\n    super(props)\n    this.state = { flagAcceptState: false, isSubmit: false }\n    this.flag = props.flag\n    this.id = props.id\n  }\n\n  handleClick(inputFlag: string) {\n    const sha256Input = sha256(new TextEncoder().encode(inputFlag))\n    this.setState({\n      flagAcceptState: this.arraysEqual(sha256Input, this.flag)\n    })\n    this.setState({\n      isSubmit: true\n    })\n  }\n\n  arraysEqual(a: Uint8Array, b: Uint8Array) {\n    if (a === b) return true\n    if (a == null || b == null) return false\n    if (a.length !== b.length) return false\n    for (var i = 0; i < a.length; ++i) {\n      if (a[i] !== b[i]) return false\n    }\n    return true\n  }\n\n  render() {\n    return (\n      <div className=\"ctf_submitForm\">\n        <div className=\"ctf_submit-column ctf_button\">\n          <button\n            onClick={() => {\n              const id: HTMLInputElement = document.getElementById(this.id) as HTMLInputElement\n              if (id) {\n                this.handleClick(id.value as string)\n              } else {\n                this.handleClick('')\n              }\n            }}\n          >\n            Submit\n          </button>\n        </div>\n        <div\n          className={\n            this.state.isSubmit\n              ? this.state.flagAcceptState\n                ? 'ctf_submit-column ctf_output ctf_submit-success'\n                : 'ctf_submit-column ctf_output ctf_submit-failure'\n              : 'ctf_submit-column ctf_output'\n          }\n        >\n          {this.state.isSubmit ? (this.state.flagAcceptState ? 'SUCCESS' : 'FAILURE') : ''}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ToggleClass\n","export default __webpack_public_path__ + \"static/problem-ab00b7457e22d5d63fa095e9870ecf74.pdf\";","import React from 'react'\nimport miscTestPDF from '../../pages/ctf/content/problem.pdf'\n\nexport interface ProblemsProps {\n  title: string\n  statement: string | JSX.Element\n  flag: string\n  answer: string | JSX.Element\n}\n\nexport const ProblemsData: ProblemsProps[] = [\n  {\n    title: '[Welcome](100) Welcome Problem',\n    statement: (\n      <>\n        This Problems Answer is <code>xryuseixCTF&#123;flag&#125;</code>\n      </>\n    ),\n    flag: 'xryuseixCTF{flag}',\n    answer: 'xryuseixCTF{flag}'\n  },\n  {\n    title: '[misc](200) Time measurement',\n    statement: (\n      <>\n        実行時間を計測するサイトがあります．試してみてください！\n        <br />\n        <a href=\"https://redos-server.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          https://redos-server.herokuapp.com/\n        </a>\n      </>\n    ),\n    flag: 'xryuseixCTF{Thi5_i5_ReD05_4tt4ck}',\n    answer: (\n      <>\n        ReDoS攻撃が成立します．\n        <br />\n        <a href=\"https://redos-server.herokuapp.com/aaaaaaaaaaaaaaaaaaaaaaaaa\">\n          https://redos-server.herokuapp.com/aaaaaaaaaaaaaaaaaaaaaaaaa\n        </a>\n      </>\n    )\n  },\n  {\n    title: '[misc](200) Test',\n    statement: (\n      <>\n        オンラインテストに向けてテスト用紙が配られました．あなたは試験開始前に問題を閲覧し，解きたいと思っています．頑張って解いてみてください！\n        <br />\n        <a href={miscTestPDF} download>\n          [PDFファイル]\n        </a>\n      </>\n    ),\n    flag: 'xryuseixCTF{onaka_suita}',\n    answer: (\n      <>\n        <code>qpdf --decrypt --password=\"password\" problem.pdf out2.pdf</code> の後にWordで開く，または\n        <code>qpdf --decrypt --password=\"risec\" problem.pdf out2.pdf</code> の後に該当部分をコピーする．\n      </>\n    )\n  }\n]\n","import React from 'react'\n\nimport Layout from '../../components/layout'\nimport Seo from '../../components/seo'\nimport Meta from '../../components/meta'\nimport FlagSubmit from '../../components/flagSubmit'\nimport { ProblemsData, ProblemsProps } from '../../components/data/ctfData'\nimport sha256 from 'fast-sha256'\n\nimport './ctf.css'\n\n/* \n 問題を全て出力\n title ... 問題タイトル\n statement ... 問題文\n flag ... 答え\n*/\nconst Problems: React.VFC<ProblemsProps> = (props: ProblemsProps) => {\n  const label = `${props.title}_label`\n  const id = `${props.title}_id`\n  return (\n    <div className=\"ctf_hidden-box\">\n      <label htmlFor={label}>{props.title}</label>\n      <input type=\"checkbox\" id={label} />\n      <div className=\"ctf_hidden-show\">\n        <p>{props.statement}</p>\n        <div className=\"ctf_submit-column input\">\n          <input type=\"text\" id={id} />\n        </div>\n        <FlagSubmit flag={sha256(new TextEncoder().encode(props.flag))} id={id} />\n        <details style={{ display: 'none' }}>\n          <summary>答え</summary>\n          {props.answer}\n        </details>\n      </div>\n    </div>\n  )\n}\n\ninterface CTFPageProps {\n  location: Location\n}\n\nconst CtfPageIndex: React.VFC<CTFPageProps> = (props: CTFPageProps) => {\n  return (\n    <Layout location={props.location}>\n      <Seo title=\"CTF\" description=\"CTF問題をここにおきます．基本的に簡単です．\" />\n      <Meta title=\"CTF\" />\n      <h1>CTF</h1>\n      <p>CTF問題をここにおきます．基本的に簡単です．</p>\n      <p>このページのソースはみないでね，フラグがそのまま載ってます．</p>\n      {ProblemsData.map((data) => (\n        <Problems {...data} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default CtfPageIndex\n;('IntrinsicAttributes')\n;('IntrinsicClassAttributes<ToggleClass>')\n;('Readonly<{}>')\n;('Readonly<{ children?: ReactNode; }>')\n"],"names":["exports","__esModule","digestLength","blockSize","K","Uint32Array","hashBlocks","w","v","p","pos","len","a","b","c","d","e","f","g","h","u","i","j","t1","t2","Hash","this","state","Int32Array","temp","buffer","Uint8Array","bufferLength","bytesHashed","finished","reset","prototype","clean","length","update","data","dataLength","Error","dataPos","finish","out","left","bitLenHi","bitLenLo","padLength","digest","_saveState","_restoreState","from","HMAC","key","inner","outer","pad","istate","ostate","hash","hmac","fillBuffer","info","counter","num","hkdfSalt","hkdf","salt","okm","hmac_","bufpos","fill","pbkdf2","password","iterations","dkLen","prf","ctr","t","dk","k","factory","sha256","module","ToggleClass","props","flagAcceptState","isSubmit","flag","id","handleClick","inputFlag","sha256Input","TextEncoder","encode","setState","arraysEqual","render","className","onClick","document","getElementById","value","React","ProblemsData","title","statement","answer","href","target","rel","miscTestPDF","download","Problems","label","htmlFor","type","style","display","location","description","map"],"sourceRoot":""}